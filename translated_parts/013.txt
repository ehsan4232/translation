\section{مقیاس‌پذیری عمودی در مقابل مقیاس‌پذیری افقی}

مقیاس‌پذیری عمودی\footnote{Scale Up} به فرآیند افزودن منابع بیشتر (مانند پردازنده، رم و غیره) به سرورهای موجود اشاره دارد. در مقابل، مقیاس‌پذیری افقی\footnote{Scale Out} با اضافه کردن سرورهای بیشتر به مجموعه منابع، امکان گسترش سیستم را فراهم می‌کند. 

در شرایطی که ترافیک پایین است، مقیاس‌پذیری عمودی گزینه‌ای مناسب محسوب می‌شود و سادگی آن از مزایای اصلی این روش است. با این حال، این روش محدودیت‌های جدی دارد:

\begin{itemize}
    \item مقیاس‌پذیری عمودی دارای یک سقف مشخص است. افزودن پردازنده و حافظه نامحدود به یک سرور واحد غیرممکن است.
    \item در مقیاس‌پذیری عمودی، امکان \lr{failover}\footnote{قابلیت تحمل خرابی و جایگزینی خودکار} و افزونگی\footnote{Redundancy} وجود ندارد. در نتیجه، اگر یک سرور از کار بیفتد، سایت یا برنامه به طور کامل غیرقابل دسترس می‌شود.
\end{itemize}

به دلیل این محدودیت‌ها، مقیاس‌پذیری افقی برای برنامه‌های بزرگ‌مقیاس گزینه مطلوب‌تری است. 

\subsection{مشکلات طراحی سنتی و راه‌حل}

در طراحی سنتی، کاربران مستقیماً به سرور وب متصل می‌شوند. این رویکرد دو مشکل اصلی دارد:

\begin{itemize}
    \item اگر سرور وب آفلاین باشد، کاربران نمی‌توانند به سایت دسترسی داشته باشند.
    \item در صورتی که تعداد زیادی کاربر به صورت همزمان به سرور مراجعه کنند و به حد مجاز بار آن برسند، کاربران با کندی پاسخ یا عدم امکان اتصال مواجه می‌شوند.
\end{itemize}

استفاده از \lr{load balancer}\footnote{ترافیک‌گذار یا توزیع‌کننده بار} بهترین راه‌حل برای رفع این مشکلات است.