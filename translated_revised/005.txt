\section{فصل ۱: مقیاس‌پذیری از صفر تا میلیون‌ها کاربر}
طراحی سیستمی که از میلیون‌ها کاربر پشتیبانی کند چالش‌برانگیز است و سفری است که نیازمند بهینه‌سازی مستمر و بهبود بی‌پایان می‌باشد. در این فصل، سیستمی می‌سازیم که در ابتدا تنها از یک کاربر پشتیبانی می‌کند و به تدریج آن را تا سطح پشتیبانی از میلیون‌ها کاربر توسعه می‌دهیم. پس از مطالعه این فصل، مجموعه‌ای از تکنیک‌های کلیدی را فرا خواهید گرفت که به شما در پاسخگویی به سوالات مصاحبه‌های طراحی سیستم کمک شایانی می‌کنند.

\subsection{مقیاس‌پذیری عمودی در مقابل مقیاس‌پذیری افقی}
برای افزایش ظرفیت سیستم، دو راهکار اساسی وجود دارد:

\begin{itemize}
    \item \textbf{مقیاس‌پذیری عمودی:} مقیاس‌پذیری عمودی\footnote{\lr{Vertical Scaling}} به معنای ارتقای سخت‌افزار سرور موجود (مانند پردازنده، حافظه یا فضای ذخیره‌سازی) است.
    \item \textbf{مقیاس‌پذیری افقی:} مقیاس‌پذیری افقی\footnote{\lr{Horizontal Scaling}} به معنای اضافه کردن سرورهای بیشتر و توزیع بار بین آنها است.
\end{itemize}

\subsection{چالش‌های پایگاه داده}
با افزایش کاربران، پایگاه داده به یکی از نقاط حساس سیستم تبدیل می‌شود. راهکارهای مدیریت این چالش‌ها شامل:

\begin{itemize}
    \item \textbf{فِیل‌اُوِر:} فِیل‌اُوِر\footnote{\lr{Failover}}
    \item \textbf{کپی‌های خواندنی:} کپی‌های خواندنی\footnote{\lr{Read Replica}}
    \item \textbf{پارتیشن‌بندی:} پارتیشن‌بندی\footnote{\lr{Sharding}}
\end{itemize}

\subsection{بهینه‌سازی عملکرد با کش و میان‌افزار}
استفاده از \textbf{کش}\footnote{\lr{Cache}} (مانند \lr{Redis}) و \textbf{میان‌افزار}\footnote{\lr{Middleware}} می‌تواند بار روی سرورهای اصلی را به میزان قابل توجهی کاهش دهد.

\subsection{توزیع بار با استفاده از متعادل‌ساز بار}
برای تقسیم عادلانه درخواست‌ها بین سرورها، از \textbf{متعادل‌ساز بار}\footnote{\lr{Load Balancer}} مانند \lr{Nginx} استفاده می‌شود.

\subsection{نتیجه‌گیری}
مقیاس‌پذیری فرآیندی تدریجی است که نیازمند درک عمیق از معماری سیستم و انتخاب راهکارهای مناسب در هر مرحله از رشد می‌باشد. با بکارگیری صحیح این تکنیک‌ها، می‌توان سیستمی پایدار و قابل توسعه برای آینده طراحی نمود.