Cache: User info, device info, notification templates are cached. DB: It stores data about user, notification, settings, etc. Message queues: They remove dependencies between components. Message queues serve as buffers when high volumes of notifications are to be sent out. Each notification type is assigned with a distinct message queue so an outage in one third-party service will not affect other notification types. Workers: Workers are a list of servers that pull notification events from message queues and send them to the corresponding third-party services. Third-party services: Already explained in the initial design. iOS, Android, SMS, Email: Already explained in the initial design. Next, let us examine how every component works together to send a notification: 1. A service calls APIs provided by notification servers to send notifications. 2. Notification servers fetch metadata such as user info, device token, and notification setting from the cache or database. 3. A notification event is sent to the corresponding queue for processing. For instance, an iOS push notification event is sent to the iOS PN queue. 4. Workers pull notification events from message queues. 5. Workers send notifications to third party services. 6. Third-party services send notifications to user devices.